name: Deploy Next.js site to Pages - Dev

on:
  push:
    branches: ['dev']
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: 'pages'
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Detecta o gerenciador de pacotes (npm ou yarn)
      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/package-lock.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            echo "runner=npx --no-install" >> $GITHUB_OUTPUT
            exit 0
          elif [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "Unable to determine package manager"
            exit 1
          fi

      # Configura o ambiente Node.js
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20.11.1'
          cache: npm

      # Configura o Next.js
      - name: Setup Pages
        uses: actions/configure-pages@v4
        with:
          static_site_generator: next

      # Instala as dependências
      - name: Install dependencies
        run: npm install
      
      - name: Update Package Lock
        run: npm update

      - name: Formatando Padrão Lint e Prettier
        run: npm run format
        

      # Constrói com o Next.js
      - name: Build with Next.js
        run: |
          ${{ steps.detect-package-manager.outputs.runner }} next build
          npx next telemetry disable

      # Restaura o cache
      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-

      # Faz o upload do artefato para GitHub Pages
      - name: Upload GitHub Pages artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: .next

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      # Baixa o artefato
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          path: .next

      # Implementa no GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v3
