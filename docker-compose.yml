version: '3.8'

networks:
  backendfaculnet:
    driver: bridge

services:
  backend:
    build: .
    image: backend:latest
    container_name: backend-container
    networks:
      - backendfaculnet
    ports:
      - '10000:10000'
    volumes:
      - .:/app
    tty: true
    command: npm run dev
    depends_on:
      - mongo_impacta
      - postgres

  frontend:
    build: 
      context: ./
      dockerfile: ../frontEnd-site/Dockerfile
    image: frontend:latest
    container_name: frontend-container
    ports:
      - "3000:3000"
    volumes:
      - .:/app
    tty: true
    command: npm run dev
    networks:
      - backendfaculnet
    depends_on:
      - backend

  mongo_impacta:
    image: mongo:latest
    container_name: mongo-container
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: 123456
    networks:
      - backendfaculnet
    ports:
      - '27019:27017'
    volumes:
      - mongo_data:/data/db

  postgres:
    image: postgres:latest
    container_name: postgres-container
    restart: always
    environment:
      # POSTGRES_DB: postgresdb
      # POSTGRES_USER: root
      POSTGRES_PASSWORD: 123456
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backendfaculnet

volumes:
  mongo_data:
  postgres_data:
